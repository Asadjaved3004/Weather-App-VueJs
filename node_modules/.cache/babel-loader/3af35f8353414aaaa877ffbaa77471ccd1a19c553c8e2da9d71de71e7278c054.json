{"ast":null,"code":"export default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      api_key: \"5b0600b6c0aebd04b20ece8befab2fbc\",\n      url_base: \"https://api.openweathermap.org/data/2.5/\",\n      //data which we search in search bar\n      query: \"\",\n      //get data from API and store in weather variable\n      weather: {}\n    };\n  },\n  methods: {\n    fetchWeather(e) {\n      if (e.key == \"Enter\") {\n        fetch(`${this.url_base}weather?q=${this.query}&units=matric&APPID=${this.api_key}`)\n        //callback function\n        .then(res => {\n          return res.json();\n        }).then(this.setResults);\n      }\n    },\n    setResults(results) {\n      this.weather = results;\n    },\n    dateBuilders() {\n      let d = new date();\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      let days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear;\n      return `${day} ${date} ${month} $(year)`;\n    }\n  }\n};","map":{"version":3,"names":["name","data","api_key","url_base","query","weather","methods","fetchWeather","e","key","fetch","then","res","json","setResults","results","dateBuilders","d","date","months","days","day","getDay","getDate","month","getMonth","year","getFullYear"],"sources":["/home/teresol/Documents/FrontEnd/Weather-App-VueJs/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <main>\n      <div class=\"search-box\">\n        <input\n          type=\"text\"\n          class=\"search-bar\"\n          placeholder=\"Search.......\"\n          v-model=\"query\"\n          @keypress=\"fetchWeather\"\n        />\n      </div>\n      <div class=\"weather-wrap\" v-if=\"typeof weather.main != 'undefined'\">\n        <div class=\"location-box\">\n          <div class=\"location\">\n            {{ weather.name }},{{ weather.sys.country }}\n          </div>\n          <div class=\"date\">Thursday March 30,2023</div>\n        </div>\n        <div class=\"weather-box\">\n          <div class=\"temp\">{{ Math.round(weather.main.temp) }}Â°C</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div>\n        </div>\n      </div>\n    </main>\n  </div>\n  >\n</template>\n\n<script>\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      api_key: \"5b0600b6c0aebd04b20ece8befab2fbc\",\n      url_base: \"https://api.openweathermap.org/data/2.5/\",\n      //data which we search in search bar\n      query: \"\",\n      //get data from API and store in weather variable\n      weather: {},\n    };\n  },\n  methods: {\n    fetchWeather(e) {\n      if (e.key == \"Enter\") {\n        fetch(\n          `${this.url_base}weather?q=${this.query}&units=matric&APPID=${this.api_key}`\n        )\n          //callback function\n          .then((res) => {\n            return res.json();\n          })\n          .then(this.setResults);\n      }\n    },\n    setResults(results) {\n      this.weather = results;\n    },\n    dateBuilders() {\n      let d = new date();\n      let months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      let days = [\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n        \"Sunday\",\n      ];\n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear;\n\n      return `${day} ${date} ${month} $(year)`;\n    },\n  },\n};\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  font-family: \"moutserrat\", sans-serif;\n}\n#app {\n  /* background-image: url('./assets/cold-bg.png'); */\n  background-image: url(\"../assets/cold-bg.png\");\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\nmain {\n  min-height: 100vh;\n  padding: 25px;\n  background-image: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0.25),\n    rgba(0, 0, 0, 0.75)\n  );\n}\n.search-box {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.search-box .search-bar {\n  display: block;\n  padding: 15px;\n  width: 100%;\n\n  color: #313131;\n  font-size: 20px;\n\n  appearance: none;\n  border: none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n/*\nAfter clicking on search bar background color or shadow of search bar is changed\n*/\n.search-box .search-bar:focus {\n  box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n.location-box .location {\n  color: #fff;\n  font-size: 20px;\n  font-weight: 300;\n  text-align: center;\n  font-style: italic;\n  text-shadow: 1px 3px rgba(0, 0, 0, 0.25);\n}\n.location-box .date {\n  color: #fff;\n  font-size: 20px;\n  font-weight: 300;\n  text-align: center;\n  font-style: italic;\n}\n.weather-box {\n  text-align: center;\n}\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: #fff;\n  font-size: 102px;\n  font-weight: 900;\n\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.25);\n  border-radius: 16px;\n  margin: 30px 0px;\n\n  box-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n.weather-box .weather {\n  color: #fff;\n  font-size: 48px;\n  font-weight: 700;\n  font-style: italic;\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n</style>\n\n"],"mappings":"AA8BA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,kCAAkC;MAC3CC,QAAQ,EAAE,0CAA0C;MACpD;MACAC,KAAK,EAAE,EAAE;MACT;MACAC,OAAO,EAAE,CAAC;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,CAAC,EAAE;MACd,IAAIA,CAAC,CAACC,GAAE,IAAK,OAAO,EAAE;QACpBC,KAAK,CACF,GAAE,IAAI,CAACP,QAAS,aAAY,IAAI,CAACC,KAAM,uBAAsB,IAAI,CAACF,OAAQ;QAE3E;QAAA,CACCS,IAAI,CAAEC,GAAG,IAAK;UACb,OAAOA,GAAG,CAACC,IAAI,EAAE;QACnB,CAAC,EACAF,IAAI,CAAC,IAAI,CAACG,UAAU,CAAC;MAC1B;IACF,CAAC;IACDA,UAAUA,CAACC,OAAO,EAAE;MAClB,IAAI,CAACV,OAAM,GAAIU,OAAO;IACxB,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAIC,CAAA,GAAI,IAAIC,IAAI,EAAE;MAClB,IAAIC,MAAK,GAAI,CACX,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;MACD,IAAIC,IAAG,GAAI,CACT,QAAQ,EACR,SAAS,EACT,WAAW,EACX,UAAU,EACV,QAAQ,EACR,UAAU,EACV,QAAQ,CACT;MACD,IAAIC,GAAE,GAAID,IAAI,CAACH,CAAC,CAACK,MAAM,EAAE,CAAC;MAC1B,IAAIJ,IAAG,GAAID,CAAC,CAACM,OAAO,EAAE;MACtB,IAAIC,KAAI,GAAIL,MAAM,CAACF,CAAC,CAACQ,QAAQ,EAAE,CAAC;MAChC,IAAIC,IAAG,GAAIT,CAAC,CAACU,WAAW;MAExB,OAAQ,GAAEN,GAAG,IAAIH,IAAI,IAAIM,KAAK,UAAU;IAC1C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}